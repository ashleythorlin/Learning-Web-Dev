/*

FLEX PROPERTIES

display: flex | inline-flex --> goes on container element
flex-direction: row | column
flex-wrap: wrap | nowrap | wrapreverse
flex-basis: <length> --> basically width
justify-content: flex-start | flex-end | center --> basically alignment left/right/center
align-self: flex-start | flex-end | center --> sets default alignment for the box itself
align-items: flex-start | flex-end | center --> defines how items are aligned along cross axis
align-content: flex-start | flex-end | center --> aligns on the cross axis
flex-grow: <number> --> changes size of the boxes
flex-shrink: <number> --> changes size of the boxes
flex: <integer> --> grow/shrink combined
order: <integer> --> changes order of elements without having to change the HTML


*/

@media(min-width:768px){
    .container-1{
        display: flex;
        /* 
        lign-items: flex-start; these two are vertical alignment
        align-items: flex-end;
        align-items: center;
    
        flex-direction: column;
        */
    }
    
    .container-2{
        display: flex;
        /*
        justify-content: flex-start;
        */
        justify-content: space-between;
    }
}

.container-3{
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}

.container-1 div, .container-2 div, .container-3 div{
    border: 1px #ccc solid;
    padding: 10px;
}


.box-1{
    flex: 2;
    order: 2;
}

.box-2{
    flex: 1;
    order: 1;
}

.box-3{
    flex: 1;
    order: 3;
}

.container-2-box{
    flex-basis: 27%; /* same thing as width, more "flexy" way to do it */

}

.container-3-box{
    flex-basis: 12%;
}